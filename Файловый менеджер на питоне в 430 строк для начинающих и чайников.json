[
   "Файловый менеджер на питоне в 430 строк для начинающих и чайников",
   "Всем привет!\n\r\nЯ захотел обобщить свои знания питона и решил написать файловый менеджер для пк.\n\n\n\n\nВнимание!\nЭто всего лишь игрушка и не более, это не реальная ОС!\n\n\r\nИмпорт библиотек:\n\nimport tkinter\nimport os\nimport subprocess\nfrom tkinter import messagebox\nfrom tkinter import simpledialog\n\r\nГлавное меню:\n\nclass MainContextMenu(tkinter.Menu):\n\t''' Контекстное меню для внутренней области директории'''\n\tdef __init__(self, main_window, parent):\n\t\tsuper(MainContextMenu, self).__init__(parent, tearoff = 0)\n\t\tself.main_window = main_window\n\t\tself.add_command(label=\"Создать директорию\", command = self.create_dir)\n\t\tself.add_command(label=\"Создать файл\", command = self.create_file)\n\n\tdef popup_menu(self, event):\n\t\t''' функция для активации контекстного меню'''\n\t\t#если активны другие меню - отменяем их\n\t\tif self.main_window.file_context_menu:\n\t\t\tself.main_window.file_context_menu.unpost()\n\t\tif self.main_window.dir_context_menu:\n\t\t\tself.main_window.dir_context_menu.unpost()\n\t\tself.post(event.x_root, event.y_root)\n\n\tdef create_dir(self):\n\t\t''' функция для создания новой директории в текущей'''\n\t\tdir_name = simpledialog.askstring(\"Новая директория\", \"Введите название новой директории\")\n\t\tif dir_name:\n\t\t\tcommand = \"mkdir {0}\".format(dir_name).split(' ')\n\t\t\t#выполняем команду отдельным процессом\n\t\t\tprocess = subprocess.Popen(command, cwd=self.main_window.path_text.get(), stdout = subprocess.PIPE, stderr = subprocess.PIPE)\n\t\t\tout, err = process.communicate()\n\t\t\t#при возникновении ошибки выводим сообщение\n\t\t\tif err:\n\t\t\t\tmessagebox.showwarning(\"Операция невозможна!\",\"Отказано в доступе.\")\n\t\t\tself.main_window.refresh_window()\n\n\n\tdef create_file(self):\n\t\t''' функция для создания нового файла в текущей директории'''\n\t\tdir_name = simpledialog.askstring(\"Новый файл\", \"Введите название нового файла\")\n\t\tif dir_name:\n\t\t\tcommand = \"touch {0}\".format(dir_name).split(' ')\n\t\t\t#выполняем команду отдельным процессом\n\t\t\tprocess = subprocess.Popen(command, cwd=self.main_window.path_text.get(), stdout = subprocess.PIPE, stderr = subprocess.PIPE)\n\t\t\tout, err = process.communicate()\n\t\t\t#при возникновении ошибки выводим сообщение\n\t\t\tif err:\n\t\t\t\tmessagebox.showwarning(\"Операция невозможна!\",\"Отказано в доступе.\")\n\t\t\tself.main_window.refresh_window()\n\n\n\n\tdef insert_to_dir(self):\n\t\t''' функция для копирования файла или директории в текущую директорию'''\n\t\tcopy_obj = self.main_window.buff\n\t\tto_dir = self.main_window.path_text.get()\n\t\tif os.path.isdir(self.main_window.buff):\n\t\t\t#выполняем команду отдельным процессом\n\t\t\tprocess = subprocess.Popen(['cp', '-r', copy_obj, to_dir], stdout = subprocess.PIPE, stderr = subprocess.PIPE)\n\t\t\tout, err = process.communicate()\n\t\t\tif err:\n\t\t\t\tmessagebox.showwarning(\"Операция невозможна!\", err.decode(\"utf-8\"))\n\t\telse:\n\t\t\t#выполняем команду отдельным процессом\n\t\t\tprocess = subprocess.Popen(['cp', '-n', copy_obj, to_dir], stdout = subprocess.PIPE, stderr = subprocess.PIPE)\n\t\t\tout, err = process.communicate()\n\t\t\t#при возникновении ошибки выводим сообщение\n\t\t\tif err:\n\t\t\t\tmessagebox.showwarning(\"Операция невозможна!\",err.decode(\"utf-8\"))\n\t\tself.main_window.refresh_window()\n\r\nПри нажатии на файл должно выводиться контекстное меню:\n\n\n\nclass FileContextMenu(tkinter.Menu):\n\tdef __init__(self, main_window, parent):\n\t\tsuper(FileContextMenu, self).__init__(parent, tearoff = 0)\n\t\tself.main_window = main_window\n\t\tself.add_command(label=\"Открыть файл\", command = self.open_file)\n\t\tself.add_separator()\n\t\tself.add_command(label=\"Копировать\", command = self.copy_file)\n\t\tself.add_command(label=\"Переименовать\", command = self.rename_file)\n\t\tself.add_separator()\n\t\tself.add_command(label=\"Удалить\", command = self.delete_file)\n\n\n\tdef open_file(self):\n\t\t''' функция для открытия файла сторонними программами'''\n\t\text = self.main_window.take_extention_file(self.main_window.selected_file)\n\t\tfull_path = self.main_window.path_text.get() + self.main_window.selected_file\n\n\t\tif ext in ['txt', 'py', 'html', 'css', 'js']:\n\t\t\tif 'mousepad' in self.main_window.all_program:\n\t\t\t\tsubprocess.Popen([\"mousepad\", full_path], start_new_session = True)\n\t\t\telse:\n\t\t\t\tself.problem_message()\n\t\telif ext == 'pdf':\n\t\t\tif 'evince' in self.main_window.all_program:\n\t\t\t\tsubprocess.run([\"evince\", full_path], start_new_session = True)\n\t\t\telse:\n\t\t\t\tself.problem_message()\n\t\telif ext in ['png', 'jpeg', 'jpg', 'gif']:\n\t\t\tif 'ristretto' in self.main_window.all_program:\n\t\t\t\tsubprocess.run([\"ristretto\", full_path], start_new_session = True)\n\t\t\telse:\n\t\t\t\tself.problem_message()\n\t\telse:\n\t\t\tself.problem_message()\n\n\tdef problem_message(self):\n\t\tmessagebox.showwarning(\"Проблема при открытии файла\", 'Прости, но я не могу открыть этот файл')\n\n\tdef copy_file(self):\n\t\t''' функция для копирования файла'''\n\t\t#заносим полный путь к файлу в буффер\n\t\tself.main_window.buff = self.main_window.path_text.get() + self.main_window.selected_file\n\t\tself.main_window.refresh_window()\n\n\n\tdef delete_file(self):\n\t\t''' функция для удаления выбранного файла'''\n\t\tfull_path = self.main_window.path_text.get() + self.main_window.selected_file\n\t\t#выполняем команду отдельным процессом\n\t\tprocess = subprocess.Popen(['rm', full_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n\t\toutput, err = process.communicate()\n\t\t#при возникновении ошибки выводим сообщение\n\t\tif err:\n\t\t\tmessagebox.showwarning(\"Проблема при удалении файла\", 'У Вас нет прав для удаления данного файла')\n\t\tself.main_window.refresh_window()\n\n\tdef rename_file(self):\n\t\t''' функция для переименования выбранного файла'''\n\t\tnew_name = simpledialog.askstring(\"Переименование файла\", \"Введите новое название файла\")\n\t\tif new_name:\n\t\t\told_file = self.main_window.path_text.get() + self.main_window.selected_file\n\t\t\tnew_file = self.main_window.path_text.get() + new_name\n\t\t\t#выполняем команду отдельным процессом\n\t\t\tprocess = subprocess.Popen(['mv', old_file, new_file], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n\t\t\toutput, err = process.communicate()\n\t\t\t#при возникновении ошибки выводим сообщение\n\t\t\tif err:\n\t\t\t\tmessagebox.showwarning(\"Проблема при переименовании файла\", 'У Вас нет прав для переименования данного файла')\n\t\t\tself.main_window.refresh_window()\n\n\tdef popup_menu(self, event):\n\t\t''' функция для активации контекстного меню'''\n\t\tself.post(event.x_root, event.y_root)\n\t\t#если активны другие меню - отменяем их\n\t\tif self.main_window.main_context_menu:\n\t\t\tself.main_window.main_context_menu.unpost()\n\t\tif self.main_window.dir_context_menu:\n\t\t\tself.main_window.dir_context_menu.unpost()\n\t\tself.main_window.selected_file = event.widget[\"text\"]\n\n\r\nТо же самое для директории:\n\nclass DirContextMenu(tkinter.Menu):\n\tdef __init__(self, main_window, parent):\n\t\tsuper(DirContextMenu, self).__init__(parent, tearoff = 0)\n\t\tself.main_window = main_window\n\t\tself.add_command(label=\"Переименовать\", command = self.rename_dir)\n\t\tself.add_command(label=\"Копировать\", command = self.copy_dir)\n\t\tself.add_separator()\n\t\tself.add_command(label=\"Удалить\", command = self.delete_dir)\n\n\tdef copy_dir(self):\n\t\t''' функция для копирования директории'''\n\t\tself.main_window.buff = self.main_window.path_text.get() + self.main_window.selected_file\n\t\tself.main_window.refresh_window()\n\n\n\tdef delete_dir(self):\n\t\t''' функция для удаления выбранной директории'''\n\t\tfull_path = self.main_window.path_text.get() + self.main_window.selected_file\n\t\tif os.path.isdir(full_path):\n\t\t\t#выполняем команду отдельным процессом\n\t\t\tprocess = subprocess.Popen(['rm', '-rf', full_path], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n\t\t\toutput, err = process.communicate()\n\t\t\t#при возникновении ошибки выводим сообщение\n\t\t\tif err:\n\t\t\t\tmessagebox.showwarning(\"Проблема при удалении директории\", 'У Вас нет прав для удаления данной директории')\n\t\tself.main_window.refresh_window()\n\n\tdef rename_dir(self):\n\t\t''' функция для переименования выбранной директории'''\n\t\tnew_name = simpledialog.askstring(\"Переименование директории\", \"Введите новое название директории\")\n\t\tif new_name:\n\t\t\told_dir = self.main_window.path_text.get() + self.main_window.selected_file\n\t\t\tnew_dir = self.main_window.path_text.get() + new_name\n\t\t\t#выполняем команду отдельным процессом\n\t\t\tprocess = subprocess.Popen(['mv', old_dir, new_dir], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n\t\t\toutput, err = process.communicate()\n\t\t\t#при возникновении ошибки выводим сообщение\n\t\t\tif err:\n\t\t\t\tmessagebox.showwarning(\"Проблема при переименовании директории\", 'У Вас нет прав для переименования данной директории')\n\t\t\tself.main_window.refresh_window()\n\n\tdef popup_menu(self, event):\n\t\t''' функция для активации контекстного меню'''\n\t\tself.post(event.x_root, event.y_root)\n\t\t#если активны другие меню - отменяем их\n\t\tif self.main_window.main_context_menu:\n\t\t\tself.main_window.main_context_menu.unpost()\n\t\tif self.main_window.file_context_menu:\n\t\t\tself.main_window.file_context_menu.unpost()\n\t\tself.main_window.selected_file = event.widget[\"text\"]\n\n\r\nКласс основного окна:\n\n\nclass MainWindow():\n\t''' Класс основного окна'''\n\tdef __init__(self):\n\t\tself.root = tkinter.Tk()\n\t\tself.root.title(\"FileManager\")\n\t\tself.root.resizable(width = False, height = False)\n\t\tself.root.geometry('450x300')\n\n\t\tself.hidden_dir = tkinter.IntVar()\n\t\tself.buff = None\n\t\tself.all_program = os.listdir('C:/')\n\n\t\tself.root.bind('<Button-1>', self.root_click)\n\t\tself.root.bind('<FocusOut>', self.root_click)\n\n\t\t#top frame\n\t\tself.title_frame = tkinter.Frame(self.root)\n\t\tself.title_frame.pack(fill = 'both', expand = True)\n\n\t\t#back button\n\t\tself.back_button = tkinter.Button(self.title_frame, text = \"..\", command = self.parent_dir, width = 1, height = 1)\n\t\tself.back_button.pack(side = 'left')\n\n\t\t#path entry\n\t\tself.path_text = tkinter.StringVar()\n\t\tself.path_text.set('/')\n\t\tself.current_path = tkinter.Entry(self.title_frame, textvariable = self.path_text, width = 40, state='readonly')\n\t\tself.current_path.pack(side = 'left')\n\n\t\t#button show/hidde hidden dir/file\n\t\tself.check_button = tkinter.Checkbutton(self.title_frame, text = \"Hidden\", font = (\"Helvetica\", 10), padx = 1, pady = 1, variable = self.hidden_dir, command = self.refresh_window)\n\t\tself.check_button.pack(side = 'left')\n\n\t\t#main frame\n\t\tself.main_frame = tkinter.Frame(self.root)\n\t\tself.main_frame.pack()\n\n\t\t# scroll bar\n\t\tself.scrollbar_vert = tkinter.Scrollbar(self.main_frame, orient=\"vertical\")\n\t\tself.scrollbar_vert.pack(side = 'right', fill = 'y')\n\n\t\tself.scrollbar_hor = tkinter.Scrollbar(self.main_frame, orient=\"horizontal\")\n\t\tself.scrollbar_hor.pack(side = 'bottom', fill = 'x')\n\n\t\t#canvas\n\t\tself.canvas = tkinter.Canvas(self.main_frame, borderwidth=0,  bg = 'white')\n\t\tself.inner_frame = tkinter.Frame(self.canvas,  bg = 'white')\n\n\t\t#команды для прокрутки\n\t\tself.scrollbar_vert[\"command\"] = self.canvas.yview\n\t\tself.scrollbar_hor[\"command\"] = self.canvas.xview\n\n\t\t#настройки для canvas\n\t\tself.canvas.configure(yscrollcommand=self.scrollbar_vert.set, xscrollcommand = self.scrollbar_hor.set, width=400, heigh=250)\n\n\t\tself.canvas.pack(side='left', fill='both', expand=True)\n\t\tself.canvas.create_window((0,0), window=self.inner_frame, anchor=\"nw\")\n\n\n\t\t#отрисовываем содержимое лиректории\n\t\tself.dir_content()\n\n\n\tdef root_click(self, event):\n\t\t''' функция для обработки события клика в root'''\n\t\t#если есть контекстные меню - отменяем\n\t\tif self.file_context_menu:\n\t\t\tself.file_context_menu.unpost()\n\t\tif self.main_context_menu:\n\t\t\tself.main_context_menu.unpost()\n\t\tif self.dir_context_menu:\n\t\t\tself.dir_context_menu.unpost()\n\n\tdef dir_content(self):\n\t\t''' функция для определения содержимого текущей директории'''\n\t\t#содержимое в текущей директории\n\t\tdir_list = os.listdir(self.path_text.get())\n\t\tpath = self.path_text.get()\n\n\t\tif not dir_list:\n\t\t\t#общее контекстное меню\n\t\t\tself.main_context_menu = MainContextMenu(self, self.canvas)\n\t\t\tself.canvas.bind('<Button-3>', self.main_context_menu.popup_menu)\n\t\t\tif self.buff:\n\t\t\t\tself.main_context_menu.add_command(label=\"Вставить\", command = self.main_context_menu.insert_to_dir)\n\t\t\tself.inner_frame.bind('<Button-3>', self.main_context_menu.popup_menu)\n\t\t\t#контекстное меню для файлов\n\t\t\tself.file_context_menu = None\n\t\t\t#контекстное меню для директории\n\t\t\tself.dir_context_menu = None\n\t\t\treturn None\n\n\t\t#общее контекстное меню\n\t\tself.main_context_menu = MainContextMenu(self, self.canvas)\n\t\tself.canvas.bind('<Button-3>', self.main_context_menu.popup_menu)\n\t\tif self.buff:\n\t\t\tself.main_context_menu.add_command(label=\"Вставить\", command = self.main_context_menu.insert_to_dir)\n\t\t#контекстное меню для файлов\n\t\tself.file_context_menu = FileContextMenu(self, self.inner_frame)\n\t\t#контекстное меню для директории\n\t\tself.dir_context_menu = DirContextMenu(self, self.inner_frame)\n\n\n\t\ti = 0\n\t\tfor item in dir_list:\n\n\t\t\tif os.path.isdir(str(path) + item):\n\t\t\t\t#обрабатываем директории\n\t\t\t\tif os.access(str(path) + item, os.R_OK):\n\t\t\t\t\tif (not self.hidden_dir.get() and  not item.startswith('.')) or self.hidden_dir.get():\n\t\t\t\t\t\tphoto = tkinter.PhotoImage(file =\"img/folder.png\")\n\n\t\t\t\t\t\ticon = tkinter.Label(self.inner_frame, image=photo,  bg = 'white')\n\t\t\t\t\t\ticon.image = photo\n\t\t\t\t\t\ticon.grid(row=i+1, column=0)\n\n\t\t\t\t\t\tfolder_name = tkinter.Label(self.inner_frame, text=item,  bg = 'white', cursor = 'hand1')\n\t\t\t\t\t\tfolder_name.bind(\"<Button-1>\", self.move_to_dir)\n\t\t\t\t\t\tfolder_name.bind(\"<Button-3>\", self.dir_context_menu.popup_menu)\n\t\t\t\t\t\tfolder_name.grid(row=i+1, column=1, sticky='w')\n\t\t\t\telse:\n\t\t\t\t\tif (not self.hidden_dir.get() and not item.startswith('.')) or self.hidden_dir.get():\n\t\t\t\t\t\tphoto = tkinter.PhotoImage(file =\"img/folder_access.png\")\n\n\t\t\t\t\t\ticon = tkinter.Label(self.inner_frame, image=photo,  bg = 'white')\n\t\t\t\t\t\ticon.image = photo\n\t\t\t\t\t\ticon.grid(row=i+1, column=0)\n\n\t\t\t\t\t\tfolder_name = tkinter.Label(self.inner_frame, text=item,  bg = 'white')\n\t\t\t\t\t\tfolder_name.bind(\"<Button-1>\", self.move_to_dir)\n\t\t\t\t\t\tfolder_name.grid(row=i+1, column=1, sticky='w')\n\n\t\t\telse:\n\t\t\t\t#обрабатываем файлы\n\t\t\t\tif (not self.hidden_dir.get() and not item.startswith('.')) or self.hidden_dir.get():\n\t\t\t\t\text = self.take_extention_file(item)\n\t\t\t\t\t#фото, картинки\n\t\t\t\t\tif ext in ['jpeg', 'jpg', 'png', 'gif']:\n\t\t\t\t\t\tphoto = tkinter.PhotoImage(file =\"img/photo.png\")\n\n\t\t\t\t\t\ticon = tkinter.Label(self.inner_frame, image=photo,  bg = 'white')\n\t\t\t\t\t\ticon.image = photo\n\t\t\t\t\t\ticon.grid(row=i+1, column=0)\n\n\t\t\t\t\t\tfile_name = tkinter.Label(self.inner_frame, text=item,  bg = 'white')\n\t\t\t\t\t\tfile_name.grid(row=i+1, column=1, sticky='w')\n\n\t\t\t\t\t\tfile_name.bind(\"<Button-3>\", self.file_context_menu.popup_menu)\n\t\t\t\t\telse:\n\t\t\t\t\t\t#другие файлы\n\t\t\t\t\t\tif os.access(str(path) + item, os.R_OK):\n\t\t\t\t\t\t\tphoto = tkinter.PhotoImage(file =\"img/file.png\")\n\n\t\t\t\t\t\t\ticon = tkinter.Label(self.inner_frame, image=photo,  bg = 'white')\n\t\t\t\t\t\t\ticon.image = photo\n\t\t\t\t\t\t\ticon.grid(row=i+1, column=0)\n\n\t\t\t\t\t\t\tfolder_name = tkinter.Label(self.inner_frame, text=item,  bg = 'white')\n\t\t\t\t\t\t\tfolder_name.grid(row=i+1, column=1, sticky='w')\n\n\t\t\t\t\t\t\tfolder_name.bind(\"<Button-3>\", self.file_context_menu.popup_menu)\n\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\tphoto = tkinter.PhotoImage(file =\"img/file_access.png\")\n\n\t\t\t\t\t\t\ticon = tkinter.Label(self.inner_frame, image=photo,  bg = 'white')\n\t\t\t\t\t\t\ticon.image = photo\n\t\t\t\t\t\t\ticon.grid(row=i+1, column=0)\n\n\t\t\t\t\t\t\tfolder_name = tkinter.Label(self.inner_frame, text=item,  bg = 'white')\n\t\t\t\t\t\t\tfolder_name.grid(row=i+1, column=1, sticky='w')\n\t\t\ti += 1\n\t\t#обновляем inner_frame и устанавливаем прокрутку для нового содержимого\n\t\tself.inner_frame.update()\n\t\tself.canvas.configure(scrollregion=self.canvas.bbox(\"all\"))\n\n\tdef move_to_dir(self, event):\n\t\t''' функция для перехода в выбранную директорию'''\n\t\telem = event.widget\n\t\tdir_name = elem[\"text\"]\n\t\tfool_path = self.path_text.get() + dir_name\n\t\tif os.path.isdir(fool_path) and os.access(fool_path, os.R_OK):\n\t\t\told_path = self.path_text.get()\n\t\t\tself.path_text.set(old_path + dir_name + '/')\n\t\t\tself.root_click('<Button-1>')\n\t\t\tself.refresh_window()\n\n\n\tdef parent_dir(self):\n\t\t''' функция для перемещения в родительскую директорию'''\n\t\told_path = [i for i in self.path_text.get().split('/') if i]\n\t\tnew_path = '/'+'/'.join(old_path[:-1])\n\t\tif not new_path:\n\t\t\tnew_path = '/'\n\t\tif os.path.isdir(new_path):\n\t\t\tif new_path == '/':\n\t\t\t\tself.path_text.set(new_path)\n\n\t\t\telse:\n\t\t\t\tself.path_text.set(new_path + '/')\n\t\t\tself.refresh_window()\n\n\n\tdef take_extention_file(self, file_name):\n\t\t''' функция для получения расширения файла'''\n\t\tls = file_name.split('.')\n\t\tif len(ls)>1:\n\t\t\treturn ls[-1]\n\t\telse:\n\t\t\treturn None\n\n\tdef refresh_window(self):\n\t\t''' функция для обновления текущего отображения директорий/файлов'''\n\t\tfor widget in self.inner_frame.winfo_children():\n\t\t\t\twidget.destroy()\n\t\tself.dir_content()\n\t\tself.canvas.yview_moveto(0)\n\r\nИ наконец, создание окна и запаковка виджетов:\n\nwin = MainWindow()\nwin.root.mainloop()\n\n\nФайлы, ассеты, бинарники здесь\nyadi.sk/d/0A8TnoazXMk1qg\n\n\r\nБуду рад, если вы поделитесь со мной улучшенной версией этой программы!\r\nПишите: ki1killer@yandex.ru "
]