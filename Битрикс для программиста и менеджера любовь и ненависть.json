[
   "Битрикс для программиста и менеджера: любовь и ненависть",
   "Здравствуйте. Я уже давно не пишу на php, но то и дело натыкаюсь на интернет-магазины на системе управления сайтами Битрикс. И я вспоминаю о своих исследованиях.\n\r\nБитрикс не любят примерно так, как Москву начала 2000-х: успешный и денежный проект, объективно ничем не заслуживший свой успех. Так же делятся и разработчики: для одних это предмет ненависти, а другие смотрят со снисхождением и отмечают, что это самая коммерчески успешная система управления сайтами. Мои публикации о Битрикс не могли угодить ни тем, ни другим: одну сторону отвращает само упоминание о Битрикс, а другой не нравится игнорирование официальных рекомендаций для разработки под Битрикс.\n\r\nИ это всё очень интересно.\n\r\nДжумла вызывает смех.\r\nВордпресс вызывает удивление.\r\nБитрикс вызывает ненависть. Почему? Я захотел ответить именно на этот вопрос, и этот ответ оказался неожиданным.\n\nНесоблюдение рекомендаций разработчика Битрикс\r\nШесть лет назад я прошёл курсы разработчиков Битрикс. Вначале я честно пытался следовать рекомендациям и настраивать стандартные модули, но требуемых задач они не выполняли. Затем я стал использовать более низкоуровневые функции системы, но и они работали странно.\n\r\nПостепенно я присоединил нормальный шаблонизатор, перешёл на чистый SQL и вообще отказался от самой архитектуры предлагаемой этой системой. По сути, мои разработки, это был уже не Битрикс, а некая надстройка над базой данных с предсказуемой структурой.\n\r\nНа некоторых проектах панель управления также почти не использовалась, поскольку был налажен импорт в интернет-магазин товаров и экспорт заказов в 1С, экспорт списка магазинов из 1С на сайт, и тому подобное. Фактически, от Битрикс оставалась только база данных.\n\r\nЯ обосновывал это для себя оптимизацией. Но настоящая причина вскрылась только спустя время. И она — совсем из другой области.\n\nОбманули\r\nНенависть рождается из обманутой любви, а любовь — это взгляд с экрана. При выборе системы для проекта, вам, заказчикам, обещают золотые горы, и, как программист, конечно, вы ожидаете прорывной архитектуры, которая подарит вам чистое наслаждение от программирования.\n\r\nНо чем дальше вы погружаетесь в работу, тем больше разочаровываетесь. А деньги уже заплачены, силы уже вложены. Но только это не рождало бы такой ненависти. С кем не бывает, лоханулся, как все. Но это только начало.\n\r\nУже после покупки вас продолжают убеждать, что всё так и должно быть. Ваш стиль программирования — отражение вашего видения мира. Вас призывают его сменить. И вот это уже приводит к столкновению внутри вас.\n\r\nВы не можете принять этот стиль, но вам нужно его принять или отказаться от работы. А если вы пытаетесь отстаивать свою точку зрения, неожиданно, вы оказываетесь в меньшинстве, даже если технически вы абсолютно правы.\n\nОбоснование бизнеса для работы с Битрикс\r\nС точки зрения бизнеса, оставить систему в неизменном виде, максимально следовать рекомендациям производителя системы, использовать стандартные решения — это надёжный путь — непрофильная компания доверяется широко известному IT-производителю с огромным парком обслуживания. А на другом конце — доверие собственному наёмному программисту, качество решений которого проверить невозможно, который может уволиться в любой момент. Если сайт тормозит, нужно докупить более мощный сервер: это понятное и простое решение. А оптимизация завязана на решения конкретного программиста. Представляете, вас боятся.\n\r\nПрограммисты мыслят парадигмами, менеджеры же мыслят бюджетами. Они общаются с такими же менеджерами из компаний-поставщиков. Они говорят друг с другом на одном языке, а ваших слов они могут просто не понимать, если они не переводятся на деньги.\n\nВнутренний конфликт разработчика при работе с Bitrix\r\nЕсли посмотреть на проблему с этой стороны, то легко осознать, почему руководители не на нашей стороне. Менеджеры не видят технических тонкостей, они купили систему, и они же платят вам деньги. Для них легко и просто обосновывать затраты директорам и владельцам. Но для программиста всё это провоцирует внутренний психологический конфликт.\n\nПочему техники проигрывают\r\nНо почему годы идут, а Битрикс по-прежнему продаётся? Поражение противников Битрикс рождается из неверной постановки вопроса. Да, технически вы более грамотны, но не вы решаете вопрос о покупке, иначе вы бы сами были менеджерами. А развитие Битрикс обуславливается именно таким мелким противостоянием между менеджментом и техническими специалистами, каждым решением о покупке лицензии.\n\r\nВы играете на том поле, на котором вам предлагают играть. Вы говорите об оптимизации — но она неочевидна, и преимущества не перевешивают. Вы говорите об удобстве использования — но вы же не будете делать свою собственную панель управления под один проект? Даже под несколько. Вы говорите о том, что интеграция из коробки — это миф, но, во-первых, у других она не лучше, а во-вторых, ведь вы тогда зачем? И, самое главное, вы говорите об архитектуре — и вас не понимают. Все ваши аргументы находятся в технической области. Но именно вы — технический специалист, и поэтому, это же и есть ваша задача — сделать так, чтобы технически всё работало. Так вам говорят.\n\r\nМенеджеры сильны в работе словом. К тому же их обычно больше одного. И вам нужны очень сильные аргументы, чтобы переубедить их, даже если с вами будут советоваться. Но в этом споре вы проиграете. Обычно, у программиста на этом этапе будет недостаточно технического, управленческого, и просто жизненного опыта, чтобы вступать в подобные противостояния.\n\nТехнические аспекты претензий к системе управления сайтами Битрикс\n\r\nАргументы технического плана выглядят несостоятельными, почти на каждый из них можно ответить, а другие вопросы можно просто заболтать, и у стандартного программиста меньше опыта в вербальных противостояниях, чем у менеджера. Обычно к системе предъявляется много частных и мелких претензий, на которые вполне можно ответить при должном уровне подготовки. На все эти мелкие споры и ведутся противники Битрикс, и в этих спорах они проигрывают.\n\r\nНо попробуем выделить главное.\n\r\n — В системе отсутствует единая точка входа. Это значит, что точку входа можно поставить где угодно: в запутанной структуре каталогов можно спрятать файл, который авторизует любого как администратора сайта. А сама эта бешеная вложенность поддиректорий как будто специально создана для таких внедрений.\r\n — В системе существуют дублирующие друг друга модули, и ни один из них невозможно настроить под свои собственные нужды без внесения изменений, несмотря на то, что они имеют десятки(!) настроек. И наличие этих настроек сбивает с толку: кажется, что предусмотрены все функции, но на самом деле, это только иллюзия, созданная намеренно.\r\n — Для того, чтобы получить доступ к данным, нужно вызвать много разнообразных функций, тогда как всё это можно уложить в один простой SQL запрос. В системе имеются даже штатные средства для работы с базой данных, и зачем тогда все эти разнообразные модули и функции? Чтобы пускать пыль в глаза, и замять вопрос оптимизации.\r\n — Эту же цель имеет и так называемое трёхуровневое кеширование и прочие подобные функции, которые являются технически совершенно бесполезными, а введены исключительно ради включения загадочного, и потому привлекательного, термина в рекламную кампанию.\n\r\nИ теперь, видя, что столько усилий прилагается именно для того, чтобы представить систему как многофункциональную, современную и универсальную, не должно ли возникнуть у опытных менеджеров сомнение в том, что и все остальные аргументы продавцов того же плана?..\n\nАргумент «Новая версия»\r\nНо, даже если вдруг Битрикс начнёт проигрывать спор даже в техническом плане, и на этот вопрос заранее готов ответ: новая версия, в которой учтены все недоработки предыдущих версий. Забавно наблюдать этот общий приём, когда циклично, раз в два-три года, одни и те же производители предлагают нам купить новое и хорошее взамен плохого и старого. Которое было новым и хорошим два-три года назад.\n\nПричина ненависти разработчиков к Битрикс\r\nВ качестве итога, можно выделить несколько аспектов:\n\r\nНеважно, какого качества система — главное, что она продаётся, а потом, когда купят, программист разберётся. \n\r\n — пренебрежение вашей работой\r\n Мало вам просто отдать, нужно потребовать, чтобы вы сделали именно так, как рекомендовано, чтобы вы продолжали поддерживать эту неверную архитектуру.\r\n — психологическое насилие\r\n Но именно сама архитектура и рождает проблемы. Выигрывает именно то, в чём вообще всё неправильно.\r\n — несправедливость\r\n Документация создаёт иллюзию широчайшего разнообразия функциональности каждого модуля за счёт наличия огромного количества настроек. За загадочными и притягательными маркетинговыми названиями псевдо-новых технологий прячутся технически совершенно бесполезные функции\r\n — обманутые ожидания\r\n Технически неправильно, но рыночно — гениально. И вы, на полностью техническом поле, ничего не можете с этим сделать.\r\n — бессилие.\n\r\nКак видите, чисто технических причин здесь нет. Поэтому и реакция такая эмоциональная.\n\nСпособы программирования в системе управления сайтами Битрикс\r\nМы разобрались, почему Битрикс вызывает ненависть. Тем, кто вынужден дорабатывать эту систему, получил её по наследству, установил из-за решения менеджмента, предоставляется возможность выбора. Вы можете следовать всем рекомендациям разработчика Битрикс. \n\r\nДействовать по-другому было сложно из-за\r\n — неодобрения сообществом разработчиков и менеджмента\r\n — недостаточности сведений об альтернативных способах работы\n\r\nЭта статья поможет устранить противоречия первого пункта, по крайней мере, ваши внутренние. А последующие публикации, которые, я надеюсь, лень, занятость, и наличие аудитории таки позволят мне сделать, дадут ответы по второму пункту.\n\nПоиск программиста Битрикс\r\nПосмотрите на рынок битрикс-программистов. Они в среднем дешевле всех. А дешевле — значит, ниже уровнем. Есть специальные ускоренные курсы для Битрикс-разработчиков практически с нуля. Вы хотите, чтобы ваш продукт разрабатывали люди с начальным уровнем программирования? Потом вам за него отвечать, а рядом с вами будет неопытный человек, который не сможет решить задачи, хотя бы немного выходящие за рамки тривиальных.\n\r\nА если вы хотите защититься с помощью заказа сайта у профильных компаний-разработчиков, то знайте, что и они в массе своей используют труд таких же Битрикс-разработчиков, просто вы за него ещё и переплачиваете фирме-разработчику. В известной фирме-партнёре 1С, официальном дистрибьютере Битрикс, как раз после того, как я проходил в ней же обучение, открылась вакансия разработчика Битрикс. И мне предложили в полтора раза меньшие деньги, чем я имел в тот момент на своём текущем месте работы — и это лидер рынка!\n\r\nДа, процесс найма такого работника довольно лёгок, так так требования к ним формализованы. Если ваш собственный программист выйдет за рамки требований для Битрикс разработчика, понятно, что в дальнейшем вам нужно будет составить свои требования к программисту, и эта опция лёгкого найма для вас пропадёт.\n\r\nНо просто замените её другой квалификацией: знание SQL. Этого достаточно, чтобы человек мог разобраться и нормально работать с любой системой, в том числе, и с Битрикс.\n\nРабота напрямую с базой данных Битрикс не даёт обновлять систему\r\nМожете обновлять систему, можете — нет. Если вы не используете модулей, для вас это ничего не изменит. Никаких новых возможностей, которых не может реализовать программист, там не будет. Зато возможные проблемы несовместимости вы получить можете, даже в тех модулях, которые вы никогда не трогали.\n\r\nНе бойтесь изменений в базе данных: в основных таблицах их не будет, это слишком дорогие изменения для системы с таким багажом обратной совместимости.\n\r\nГлавное, обновление системы — это предлог продать вам так называемую «подписку», без которой обновление будет невозможно.\n\nРекомендации при работе с системой управления сайтами Битрикс\r\nНевозможно долго идти против себя. Но важно разобраться в причинах, чтобы сделать осознанный выбор, который, как всегда, остаётся за каждым. "
]