[
   "Что такое хорошо: как мы разрабатывали критерии для оценки качества вёрстки веб-проектов",
   "\n\r\nНа Хабре уже было немало материалов о том, как проводить качество вёрстки веб-проектов (вот отличная статья на эту тему) — как правило, речь в таких топиках идёт о коммерческих сайтах. В ходе развития образовательного проекта HTML Academy мы также столкнулись с необходимостью выработки критериев для оценки работ учеников.\n\r\nОчевидно, что учить нужно так, чтобы потом люди (не все из которых «технари») могли приходить в компании и работать «правильно» — то есть создавая вёрстку, которая красиво выглядит и не требует больших усилий по поддержке. Процесс создания списка универсальных критериев для оценки занял довольно длительное время и был сопряжён с рядом трудностей. Сегодня мы расскажем о том, что же у нас в итоге получилось.\n\nВажность критериев в процессе обучения\r\nИзначально оценку работ учеников, участвующих в базовых интенсивах HTML Academy, проводил помогающий им наставник (о важности наличия «живого» учителя мы писали в прошлый раз). Для повышения качества этого процесса и снижения вероятности необъективной оценки было решено выработать чёткие критерии, которым должны соответствовать работы.\n\r\nПоскольку проверку на соответствие критериям в любом случае осуществляет наставник, то необходимо было сделать так, чтобы этот профессионал был согласен с предлагаемым инструментарием оценки.\n\r\nПервая итерация наших критериев оказалась не столь объективной и однозначной, как хотелось бы, что породило целую волну споров в среде самих наставников HTML Academy — во внутреннем чате кипели настоящие баталии, в ходе которых эксперты объясняли друг другу, что «на самом деле» значит та или иная формулировка. Стало ясно, что в такой редакции пользоваться списком критериев для оценки работ студентов будет просто невозможно.\n\r\nВ результате мы переработали критерии таким образом, чтобы исключить всякую двусмысленность — все наставники должны одинаково понимать, как именно проверять работы учеников.\n\nСбор обратной связи\r\nПоскольку целью наших интенсивов является подготовка специалистов, которые смогут получить работу в компаниях и будут заняты в реальных проектах, мы решили узнать экспертное мнение представителей веб-студий. В Санкт-Петербурге такие компании объединяет ассоциация СПЕЦИА — к экспертам этих организаций мы и обратились.\n\r\nПроцессы в разных студиях построены по-разному, что сказывается в том числе на требованиях к вёрстке проектов (пример — кто-то не приемлет стилизацию элементов по id, а где-то — это вполне нормальная практика и т.д.).\n\r\nВследствие этого, не все предложения коллег мы реализовали в своих критериях, однако сбор мнений помог получить более выверенные формулировки, исключающие различные неточности.\n\nЧто в итоге получилось\r\nВ конечном итоге получился довольно обширный список критериев для оценки качества вёрстки. Он разбит на две группы: одни критерии относятся к базовым, другие — к дополнительным. Первые направлены на проверку основных знаний и навыков, а дополнительные проверяют то, насколько ученик внимателен к деталям и готов к скрупулёзной работе верстальщика.\n\r\nПолучить 100 баллов по итогам обучения можно, только выполнив все удовлетворяющие критериям задания.\n\nБазовые критерии\n1. Выполнена HTML-разметка всех страниц и всех элементов на страницах.Ученики должны понимать, что страницы должны быть свёрстаны полностью.\n2. Один стилевой файл на все страницы (с учётом normalize.css можно два).Так как мы не рассматриваем автоматизацию, то мы смягчили критерий и разрешили подключать нормалайз отдельным файлом.\n3. Вёрстка идентично отображается в последних версиях браузеров Chrome, Opera, Firefox, Safari, а также в Internet Explorer 10+.Да, наш выбор — IE10+. Ученикам мы рассказываем, как отбиваться от вёрстки под более старые версии.\n4. Сайт должен нормально смотреться на минимальном для данного макета разрешении:\n\nПри большем размере экрана макет должен оставаться по центру и не иметь горизонтального скролла.\n На экранах, которые меньше ширины макета, вёрстка не должна менять свою структуру.\n\n\nХорошо\nПлохо\n\n\n\n\n\n5. В корне документа должны быть папки css, img, js или аналогичные. Главная страница имеет название index.html. В названиях и расширениях файлов нет заглавных букв и пробелов.\n\nХорошо\nПлохо\n\n\n\n\n\n6. Единообразное написание и форматирование кода в HTML, CSS и JavaScript.Мы не настаиваем на выборе какого-то определённого стиля кодирования. Главное — единообразие.\n\nХорошо\nПлохо\n\n\n<header class=\"page-header\">\n  <nav class=\"main-menu\">\n    <ul>\n      <li class=\"active\">\n        <a href=\"index.html\">Главная</a>\n      </li>\n      <li>\n        <a href=\"contacts.html\">Контакты</a>\n      </li>\n    </ul>\n  </nav>\n  <div class=\"login\">\n    <a href=\"/login\" class=\"login-button\">Вход</a>\n  </div>\n</header>\n<header class=\"page-header\">\n  <nav class='mainMenu'>\n    <ul><li class=\"active\">\n        <a href=\"index.html\">Главная</a>\n      </li>\n      <li>\n        <a href=\"contacts.html\">Контакты</a>\n      </li>\n    </ul>\n</nav>\n\n    <div class='logIn'>\n      <a class=\"login_button\" href=\"/login\">Вход</a>\n  </div>\n</header>\n\n7. Грубые ошибки в разметке отсутствуют. Например:\n\nСсылки сделаны не тегом <a>, а другими тегами.\nИспользование строчных элементов для создания крупных (сеточных) блоков.\nАбзацы должны быть абзацами, а не <br><br>.\nЭтот критерий самый субъективный, так как есть много спорных, но приемлемых вариантов разметки элементов. Но есть и «абсолютное зло», которое в код допускать не хочется. Будем рады вашим примерам таких типовых ошибок.\n8. Нельзя строить сетку с помощью таблиц и позиционирования.Не с помощью display: table, а именно с помощью таблиц.\n9. Нельзя использовать !important в CSS.\n10. При наполнении контентом как на макете элементы каждой страницы должны соответствовать макету:\n\nДопускаются различия в 5 пикселей по высоте и 2 пикселя по ширине.\nДопускаются отсутствия стилизации кастомных элементов форм.\nДопускаются различия в отображении шрифтов, связанные со сглаживанием на различных платформах.\nДолжны быть подключены правильные шрифты, а их размеры и толщина должны соответствовать размерам в макетах и ТЗ.\nКритерии соответствия макету сделали мягче, чем полный «пиксельпёрфект». А как вы считаете правильным?\n11. Выбран правильный формат изображений:\n\nJPEG для фотографий.\nВсё остальное в PNG.\n\n12. Документ должен проходить проверку на валидность.\nДополнительные критерии\n1. Нельзя использовать транслит в названиях классов, атрибутах и так далее.\n\nХорошо\nПлохо\n\n\n.login-button { ... }\n.container { ... }\n.footer { ... }\n.knopka-vhoda { ... }\n.kontainer { ... }\n.podval { ... }\n\n2. Нельзя использовать #id для стилизации.\n3. Нельзя использовать вложенность селекторов больше двух.\n4. Использован normalize.css.\n5. Необходимо явно указать подходящее vertical-align для всех блоков с display: inline-block.\n6. Необходимо указать альтернативные варианты шрифта и тип семейства в конце перечисления.\n7. Необходимо расположить CSS-префиксы в правильном порядке.\n8. Необходимо явно прописывать цвет фона для блока у которого есть фоновое изображение. Цвет должен соответствовать преобладающему цвету фонового изображения (пока изображение не загружено, страница выглядит похоже на макет).Если не прописывать цвета фона, то без картинок часть текста может стать невидимой.\n\nНо если аккуратно прописать цвет фона блокам, то отсутствие изображений не страшно.\n\n9. Необходимо, чтобы все состояния элементов из styleguide.psd были использованы.Конечно, не все дизайнеры делают такие стайлгайды, но для учебных макетов мы их подготовили, чтобы ученики привыкали задумываться о стилизации разных состояний. Ниже фрагмент стайлгайда одного из макетов.\n\n10. Необходимо, чтобы при взаимодействии с элементами (наведение, нажатие) ни сам элемент, ни окружающие его блоки не меняли своего положения.Ничего не должно «прыгать» просто так.\n11. Необходимо использовать:\n\nСпрайты для изображений или иконочный шрифт.\nМинимизировать CSS-код.\nМинимизировать JavaScript-код.\nМы рассказываем про простейшие приёмы оптимизации вёрстки и хотим, чтобы ученики их начали использовать.\n12. Необходимо у всех изображений в теге <img> прописать размер.\n13. Вёрстка проходит тест на переполнение контентом. Вёрстка не ломается:\n\nПри добавлении в элементы большего количества текста.\nПри использовании картинок с неподходящими размерами.\nТекст не должен выпадать из объектов.\nПереполнение контентными блоками не приводит к нарушению сетки.\nПлохо, когда содержимое выпадает из родительского контейнера и становится невидимым. Например, когда белые ссылки в меню выпадают на белый фон страницы.\n\nВ этом случае при добавлении пунктов должен увеличиваться по высоте блок меню. Может быть это и некрасиво, зато пункты меню видны всегда.\n\n14. Необходимо подключить все скрипты непосредственно перед </body>.\n15. Необходимо использовать минимально возможное количество элементов HTML.Это тоже субъективный пункт, поэтому и вынесен в дополнительные критерии. С его помощью мы заставляем учеников, например, использовать псевдоэлементы для создания декоративных деталей.\n16. Необходимо использовать подход Progressive Enhancement, например:\n\nКнопки, вызывающие появление попапов, по умолчанию являются ссылками, которые ведут на отдельные страницы.\nИнтерактивная карта без JavaScript показывает статичную картинку с картой.\n\nЧто можно улучшить: мнения профессионалов\r\nПоскольку цель наших интенсивов — подготовка специалистов, которые могли бы работать над реальными веб-проектами, мы решили собрать мнения экспертов о каждом пункте критериев, вошедших в окончательный список для оценки качества вёрстки.\n\r\nНекоторые опрошенные нами эксперты заявили о том, что наш список является полным (учитывая, что с его помощью предлагается оценивать работу начинающих специалистов).\n\r\nВ их числе партнёр digital-агентства Little Big Agency Максим Юрин:\nХороший и полный список, советую всем специалистам пробегаться по всем его пунктам перед сдачей проекта. Это позволит добиться того, чтобы проект выглядел аккуратно внешне, а также, что немаловажно, сделает сам код удобным для прочтения и разбора.\r\nКто-то, как например, технический директор digital-агентства Molinos Евгений Сергеев, считает представленные выше критерии в целом адекватными, но некоторые корректировки не помешают:\nДумаю, для начинающих список вполне адекватен, в нём много важных моментов. Конечно, его можно дополнять.\n\r\nНовые критерии с ходу не предложу, но, например, я бы перенёс два критерия из дополнительных в базовые.\n\nНеобходимо указать альтернативные варианты шрифта и тип семейства в конце перечисления.\nВёрстка проходит тест на переполнение контентом. Вёрстка не ломается:\n\n\nПри добавлении в элементы большего количества текста.\nПри использовании картинок с неподходящими размерами.\nТекст не должен выпадать из объектов.\nПереполнение контентными блоками не приводит к нарушению сетки.\n\r\nОсобенно второй. Часто совсем об этом не задумываются.\r\nМнение разработчика Redmadrobot Дмитрия Шашлова:\nСписок адекватен, по нему можно проверить скорее качество усвоения материала, а чтобы оценить общие знания, их качество безотносительно к курсу Академии, критерии лучше сформулировать следующим образом:\n\n\nВёрстка должна быть максимально понятной как для верстальщика, так и для разработчика, не в ущерб стандартам и общепринятым правилам форматирования страниц;\nТо же относится и к файловой структуре для макетов, чтобы можно было судить о содержании папки по её названию;\nЗадавая параметры адаптивной вёрстки нужно иметь ввиду все возможные размеры экранов, описанные в требованиях;\nСтоит относиться с отдельным вниманием ко всем ресурсам, поставляемым в релизную вёрстку (cкрипты, стили, изображения — всё должно быть подготовлено для веба).\n\r\nЕсть и эксперты, считающие, что некоторые моменты можно улучшить или изменить. Ниже представлены комментарии и рекомендации Вадима Макеева, веб-евангелиста Opera Software и основателя сообщества Веб-стандарты:\n> Допускаются различия в 5 пикселей по высоте и 2 пикселя по ширине\r\nУказывать такие вещи в пикселях, значит провоцировать нездоровую дотошность, которая в реальном мире не нужна. Достаточно сказать «максимально близко к макету».\n\n> Документ должен проходить проверку на валидность validator.w3.org\r\nЯ бы лучше рекомендовал validator.w3.org/nu — он меньше фокусируется на формальной валидности.\n\n> Выбран правильный формат изображений: JPEG для фотографий, всё остальное в PNG\r\nНет «правильного» формата, есть только «подходящий» и здесь вполне можно упомянуть SVG.\n\n> Необходимо подключить normalize.css к вёрстке отдельным файлом\nnormalize.css или reset.css, оба подхода имеют право на жизнь.\n\n> Необходимо указать альтернативные варианты шрифта и тип семейства в конце перечисления\r\nЭто больше, чем дополнительный критерий, я бы перенёс в основные.\n\n> Необходимо расположить CSS-префиксы в правильном порядке\r\nТакое требование запутывает, нет «правильного» порядка для префиксов, есть один принцип: свойство без префикса а) должно быть, б) должно идти последним.\n\n> Спрайты для изображений или иконочный шрифт\r\nСлишком сложное и сомнительное требование, особенно насчёт иконочных шрифтов — очень сомнительная технология. Спрайты — это не вёрстка, спрайты — это оптимизация и сборка, которую нельзя делать руками, только автоматизировать.\n\n> Необходимо использовать подход Progressive Enhancement, например\r\nФорма с кнопкой, интерактивная карта — какие-то не очень внятные и ненужные частности. Лучше сформулировать: важные функции сайта должны работать без JS, точка. Ну и «прогрессивное улучшение».\r\nСо многими из высказанных предложений мы согласны и внедрим их в последующих редакциях наших критериев (а что-то уже нашло своё отражение в списке). Мы всегда готовы прислушиваться к профессионалам — поэтому не стесняйтесь делиться своими мыслями и предложениями в комментариях!\n\r\nНа сегодня всё, спасибо за внимание. В наших следующих публикациях мы расскажем о том, как помогаем начинающим верстальщикам перейти на следующий уровень с помощью продвинутых интенсивов и других интересных темах.\n\r\nПодписывайтесь на наш блог и становитесь нашим наставником! "
]